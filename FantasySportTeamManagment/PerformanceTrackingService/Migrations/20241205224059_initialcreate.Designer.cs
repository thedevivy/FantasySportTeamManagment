// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerformanceTrackingService.Data;

#nullable disable

namespace PerformanceTrackingService.Migrations
{
    [DbContext(typeof(PerformanceDbContext))]
    [Migration("20241205224059_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PerformanceTrackingService.Model.PerformanceStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("Fouls")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PerformanceStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Assists = 0,
                            Fouls = 0,
                            PlayerId = 101,
                            Points = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Assists = 0,
                            Fouls = 0,
                            PlayerId = 102,
                            Points = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Assists = 0,
                            Fouls = 0,
                            PlayerId = 103,
                            Points = 0,
                            TeamId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
